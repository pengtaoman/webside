<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.webside.business.mapper.FacilityEntityMapper">
  <resultMap id="BaseResultMap" type="com.webside.business.model.FacilityEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Feb 22 19:44:41 CST 2018.
    -->
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="cid" jdbcType="INTEGER" property="cid" />
    <result column="c_name" jdbcType="VARCHAR" property="companyName" />
    <result column="factory_no" jdbcType="VARCHAR" property="factoryNo" />
    <result column="facility_name" jdbcType="VARCHAR" property="facilityName" />
    <result column="facility_type" jdbcType="VARCHAR" property="facilityType" />
    <result column="model" jdbcType="VARCHAR" property="model" />
    <result column="accuracy" jdbcType="VARCHAR" property="accuracy" />
    <result column="test_range" jdbcType="VARCHAR" property="testRange" />
    <result column="belong_organ" jdbcType="VARCHAR" property="belongOrgan" />
    <result column="manage_no" jdbcType="VARCHAR" property="manageNo" />
    <result column="manufacturer" jdbcType="VARCHAR" property="manufacturer" />
    <result column="use_place" jdbcType="VARCHAR" property="usePlace" />
    <result column="function" jdbcType="VARCHAR" property="function" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="price_unit" jdbcType="VARCHAR" property="priceUnit" />
    <result column="local_source" jdbcType="VARCHAR" property="localSource" />
    <result column="facility_state" jdbcType="VARCHAR" property="facilityState" />
    <result column="if_test" jdbcType="VARCHAR" property="ifTest" />
    <result column="purchase_date" jdbcType="TIMESTAMP" property="purchaseDate" />
    <result column="expiration_date" jdbcType="TIMESTAMP" property="expirationDate" />
    <result column="facility_attach" jdbcType="VARCHAR" property="facilityAttach" />
    <result column="keeper" jdbcType="VARCHAR" property="keeper" />
    <result column="last_test_status" jdbcType="VARCHAR" property="lastTestStatus" />
    <result column="last_test_date" jdbcType="TIMESTAMP" property="lastTestDate" />
    <result column="last_test_result" jdbcType="VARCHAR" property="lastTestResult" />
    <result column="last_entrust_id" jdbcType="VARCHAR" property="lastEntrustId" />
    <result column="last_task_id" jdbcType="VARCHAR" property="lastTaskId" />
    <result column="last_expect_price" jdbcType="DECIMAL" property="lastExpectPrice" />
    <result column="last_real_price" jdbcType="DECIMAL" property="lastRealPrice" />
    <result column="note" jdbcType="VARCHAR" property="note" />
    <result column="operater" jdbcType="VARCHAR" property="operater" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Feb 22 19:44:41 CST 2018.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Feb 22 19:44:41 CST 2018.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Feb 22 19:44:41 CST 2018.
    -->
    id, cid, factory_no, facility_name, facility_type, model, accuracy, test_range, belong_organ, 
    manage_no, manufacturer, use_place, function, price, price_unit, local_source, facility_state, 
    if_test, purchase_date, expiration_date, facility_attach, keeper, last_test_status, 
    last_test_date, last_test_result, last_entrust_id, last_task_id, last_expect_price, 
    last_real_price, note, operater, update_time
  </sql>
  <select id="selectByExample" parameterType="com.webside.business.model.FacilityEntityExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Feb 22 19:44:41 CST 2018.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_facility
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectFactoryId" parameterType="map" resultType="java.lang.String">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Dec 14 15:13:01 CST 2017.
    -->
    select factory_no
    from tb_facility
    where cid=#{cid}
    and factory_no in
    <foreach collection="fids" index="index" item="fid" separator="," open="(" close=")">
        #{fid}
    </foreach>
  </select>
 
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Feb 22 19:44:41 CST 2018.
    -->
    select 
    <include refid="Base_Column_List" />
    from tb_facility
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Feb 22 19:44:41 CST 2018.
    -->
    delete from tb_facility
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.webside.business.model.FacilityEntityExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Feb 22 19:44:41 CST 2018.
    -->
    delete from tb_facility
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.webside.business.model.FacilityEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Feb 22 19:44:41 CST 2018.
    -->
    insert into tb_facility (id, cid, factory_no, 
      facility_name, facility_type, model, 
      accuracy, test_range, belong_organ, 
      manage_no, manufacturer, use_place, 
      function, price, price_unit, 
      local_source, facility_state, if_test, 
      purchase_date, expiration_date, facility_attach, 
      keeper, last_test_status, last_test_date, 
      last_test_result, last_entrust_id, last_task_id, 
      last_expect_price, last_real_price, note, 
      operater, update_time)
    values (#{id,jdbcType=VARCHAR}, #{cid,jdbcType=INTEGER}, #{factoryNo,jdbcType=VARCHAR}, 
      #{facilityName,jdbcType=VARCHAR}, #{facilityType,jdbcType=VARCHAR}, #{model,jdbcType=VARCHAR}, 
      #{accuracy,jdbcType=VARCHAR}, #{testRange,jdbcType=VARCHAR}, #{belongOrgan,jdbcType=VARCHAR}, 
      #{manageNo,jdbcType=VARCHAR}, #{manufacturer,jdbcType=VARCHAR}, #{usePlace,jdbcType=VARCHAR}, 
      #{function,jdbcType=VARCHAR}, #{price,jdbcType=DECIMAL}, #{priceUnit,jdbcType=VARCHAR}, 
      #{localSource,jdbcType=VARCHAR}, #{facilityState,jdbcType=VARCHAR}, #{ifTest,jdbcType=VARCHAR}, 
      #{purchaseDate,jdbcType=TIMESTAMP}, #{expirationDate,jdbcType=TIMESTAMP}, #{facilityAttach,jdbcType=VARCHAR}, 
      #{keeper,jdbcType=VARCHAR}, #{lastTestStatus,jdbcType=VARCHAR}, #{lastTestDate,jdbcType=TIMESTAMP}, 
      #{lastTestResult,jdbcType=VARCHAR}, #{lastEntrustId,jdbcType=VARCHAR}, #{lastTaskId,jdbcType=VARCHAR}, 
      #{lastExpectPrice,jdbcType=DECIMAL}, #{lastRealPrice,jdbcType=DECIMAL}, #{note,jdbcType=VARCHAR}, 
      #{operater,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  
  <insert id="insertBatch" parameterType="map">  
   insert IGNORE into tb_facility (id, cid, factory_no, 
      facility_name, facility_type, model, 
      accuracy, test_range, belong_organ, 
      manage_no, manufacturer, use_place, 
      function, price, price_unit, 
      local_source, facility_state, if_test, 
      purchase_date, expiration_date, facility_attach, 
      keeper, last_test_status, last_test_date, 
      last_test_result, last_entrust_id, last_task_id, 
      last_expect_price, last_real_price, note, 
      operater, update_time)
      values 
    <foreach collection="list" item = "item" separator="," close=";">      
      (#{item.id}, #{item.cid}, #{item.factoryNo}, 
      #{item.facilityName}, #{item.facilityType}, #{item.model}, 
      #{item.accuracy}, #{item.testRange}, #{item.belongOrgan}, 
      #{item.manageNo}, #{item.manufacturer}, #{item.usePlace}, 
      #{item.function}, #{item.price}, #{item.priceUnit}, 
      #{item.localSource}, #{item.facilityState}, #{item.ifTest}, 
      #{item.purchaseDate}, #{item.expirationDate}, #{item.facilityAttach}, 
      #{item.keeper}, #{item.lastTestStatus}, #{item.lastTestDate}, 
      #{item.lastTestResult}, #{item.lastEntrustId}, #{item.lastTaskId}, 
      #{item.lastExpectPrice}, #{item.lastRealPrice}, #{item.note}, 
      #{item.operater},now())  
    </foreach>  
  </insert>
  
  <insert id="insertSelective" parameterType="com.webside.business.model.FacilityEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Feb 22 19:44:41 CST 2018.
    -->
    insert into tb_facility
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="cid != null">
        cid,
      </if>
      <if test="factoryNo != null">
        factory_no,
      </if>
      <if test="facilityName != null">
        facility_name,
      </if>
      <if test="facilityType != null">
        facility_type,
      </if>
      <if test="model != null">
        model,
      </if>
      <if test="accuracy != null">
        accuracy,
      </if>
      <if test="testRange != null">
        test_range,
      </if>
      <if test="belongOrgan != null">
        belong_organ,
      </if>
      <if test="manageNo != null">
        manage_no,
      </if>
      <if test="manufacturer != null">
        manufacturer,
      </if>
      <if test="usePlace != null">
        use_place,
      </if>
      <if test="function != null">
        function,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="priceUnit != null">
        price_unit,
      </if>
      <if test="localSource != null">
        local_source,
      </if>
      <if test="facilityState != null">
        facility_state,
      </if>
      <if test="ifTest != null">
        if_test,
      </if>
      <if test="purchaseDate != null">
        purchase_date,
      </if>
      <if test="expirationDate != null">
        expiration_date,
      </if>
      <if test="facilityAttach != null">
        facility_attach,
      </if>
      <if test="keeper != null">
        keeper,
      </if>
      <if test="lastTestStatus != null">
        last_test_status,
      </if>
      <if test="lastTestDate != null">
        last_test_date,
      </if>
      <if test="lastTestResult != null">
        last_test_result,
      </if>
      <if test="lastEntrustId != null">
        last_entrust_id,
      </if>
      <if test="lastTaskId != null">
        last_task_id,
      </if>
      <if test="lastExpectPrice != null">
        last_expect_price,
      </if>
      <if test="lastRealPrice != null">
        last_real_price,
      </if>
      <if test="note != null">
        note,
      </if>
      <if test="operater != null">
        operater,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="cid != null">
        #{cid,jdbcType=INTEGER},
      </if>
      <if test="factoryNo != null">
        #{factoryNo,jdbcType=VARCHAR},
      </if>
      <if test="facilityName != null">
        #{facilityName,jdbcType=VARCHAR},
      </if>
      <if test="facilityType != null">
        #{facilityType,jdbcType=VARCHAR},
      </if>
      <if test="model != null">
        #{model,jdbcType=VARCHAR},
      </if>
      <if test="accuracy != null">
        #{accuracy,jdbcType=VARCHAR},
      </if>
      <if test="testRange != null">
        #{testRange,jdbcType=VARCHAR},
      </if>
      <if test="belongOrgan != null">
        #{belongOrgan,jdbcType=VARCHAR},
      </if>
      <if test="manageNo != null">
        #{manageNo,jdbcType=VARCHAR},
      </if>
      <if test="manufacturer != null">
        #{manufacturer,jdbcType=VARCHAR},
      </if>
      <if test="usePlace != null">
        #{usePlace,jdbcType=VARCHAR},
      </if>
      <if test="function != null">
        #{function,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="priceUnit != null">
        #{priceUnit,jdbcType=VARCHAR},
      </if>
      <if test="localSource != null">
        #{localSource,jdbcType=VARCHAR},
      </if>
      <if test="facilityState != null">
        #{facilityState,jdbcType=VARCHAR},
      </if>
      <if test="ifTest != null">
        #{ifTest,jdbcType=VARCHAR},
      </if>
      <if test="purchaseDate != null">
        #{purchaseDate,jdbcType=TIMESTAMP},
      </if>
      <if test="expirationDate != null">
        #{expirationDate,jdbcType=TIMESTAMP},
      </if>
      <if test="facilityAttach != null">
        #{facilityAttach,jdbcType=VARCHAR},
      </if>
      <if test="keeper != null">
        #{keeper,jdbcType=VARCHAR},
      </if>
      <if test="lastTestStatus != null">
        #{lastTestStatus,jdbcType=VARCHAR},
      </if>
      <if test="lastTestDate != null">
        #{lastTestDate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastTestResult != null">
        #{lastTestResult,jdbcType=VARCHAR},
      </if>
      <if test="lastEntrustId != null">
        #{lastEntrustId,jdbcType=VARCHAR},
      </if>
      <if test="lastTaskId != null">
        #{lastTaskId,jdbcType=VARCHAR},
      </if>
      <if test="lastExpectPrice != null">
        #{lastExpectPrice,jdbcType=DECIMAL},
      </if>
      <if test="lastRealPrice != null">
        #{lastRealPrice,jdbcType=DECIMAL},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="operater != null">
        #{operater,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.webside.business.model.FacilityEntityExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Feb 22 19:44:41 CST 2018.
    -->
    select count(*) from tb_facility
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Feb 22 19:44:41 CST 2018.
    -->
    update tb_facility
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.cid != null">
        cid = #{record.cid,jdbcType=INTEGER},
      </if>
      <if test="record.factoryNo != null">
        factory_no = #{record.factoryNo,jdbcType=VARCHAR},
      </if>
      <if test="record.facilityName != null">
        facility_name = #{record.facilityName,jdbcType=VARCHAR},
      </if>
      <if test="record.facilityType != null">
        facility_type = #{record.facilityType,jdbcType=VARCHAR},
      </if>
      <if test="record.model != null">
        model = #{record.model,jdbcType=VARCHAR},
      </if>
      <if test="record.accuracy != null">
        accuracy = #{record.accuracy,jdbcType=VARCHAR},
      </if>
      <if test="record.testRange != null">
        test_range = #{record.testRange,jdbcType=VARCHAR},
      </if>
      <if test="record.belongOrgan != null">
        belong_organ = #{record.belongOrgan,jdbcType=VARCHAR},
      </if>
      <if test="record.manageNo != null">
        manage_no = #{record.manageNo,jdbcType=VARCHAR},
      </if>
      <if test="record.manufacturer != null">
        manufacturer = #{record.manufacturer,jdbcType=VARCHAR},
      </if>
      <if test="record.usePlace != null">
        use_place = #{record.usePlace,jdbcType=VARCHAR},
      </if>
      <if test="record.function != null">
        function = #{record.function,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.priceUnit != null">
        price_unit = #{record.priceUnit,jdbcType=VARCHAR},
      </if>
      <if test="record.localSource != null">
        local_source = #{record.localSource,jdbcType=VARCHAR},
      </if>
      <if test="record.facilityState != null">
        facility_state = #{record.facilityState,jdbcType=VARCHAR},
      </if>
      <if test="record.ifTest != null">
        if_test = #{record.ifTest,jdbcType=VARCHAR},
      </if>
      <if test="record.purchaseDate != null">
        purchase_date = #{record.purchaseDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.expirationDate != null">
        expiration_date = #{record.expirationDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.facilityAttach != null">
        facility_attach = #{record.facilityAttach,jdbcType=VARCHAR},
      </if>
      <if test="record.keeper != null">
        keeper = #{record.keeper,jdbcType=VARCHAR},
      </if>
      <if test="record.lastTestStatus != null">
        last_test_status = #{record.lastTestStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.lastTestDate != null">
        last_test_date = #{record.lastTestDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastTestResult != null">
        last_test_result = #{record.lastTestResult,jdbcType=VARCHAR},
      </if>
      <if test="record.lastEntrustId != null">
        last_entrust_id = #{record.lastEntrustId,jdbcType=VARCHAR},
      </if>
      <if test="record.lastTaskId != null">
        last_task_id = #{record.lastTaskId,jdbcType=VARCHAR},
      </if>
      <if test="record.lastExpectPrice != null">
        last_expect_price = #{record.lastExpectPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.lastRealPrice != null">
        last_real_price = #{record.lastRealPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.note != null">
        note = #{record.note,jdbcType=VARCHAR},
      </if>
      <if test="record.operater != null">
        operater = #{record.operater,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Feb 22 19:44:41 CST 2018.
    -->
    update tb_facility
    set id = #{record.id,jdbcType=VARCHAR},
      cid = #{record.cid,jdbcType=INTEGER},
      factory_no = #{record.factoryNo,jdbcType=VARCHAR},
      facility_name = #{record.facilityName,jdbcType=VARCHAR},
      facility_type = #{record.facilityType,jdbcType=VARCHAR},
      model = #{record.model,jdbcType=VARCHAR},
      accuracy = #{record.accuracy,jdbcType=VARCHAR},
      test_range = #{record.testRange,jdbcType=VARCHAR},
      belong_organ = #{record.belongOrgan,jdbcType=VARCHAR},
      manage_no = #{record.manageNo,jdbcType=VARCHAR},
      manufacturer = #{record.manufacturer,jdbcType=VARCHAR},
      use_place = #{record.usePlace,jdbcType=VARCHAR},
      function = #{record.function,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DECIMAL},
      price_unit = #{record.priceUnit,jdbcType=VARCHAR},
      local_source = #{record.localSource,jdbcType=VARCHAR},
      facility_state = #{record.facilityState,jdbcType=VARCHAR},
      if_test = #{record.ifTest,jdbcType=VARCHAR},
      purchase_date = #{record.purchaseDate,jdbcType=TIMESTAMP},
      expiration_date = #{record.expirationDate,jdbcType=TIMESTAMP},
      facility_attach = #{record.facilityAttach,jdbcType=VARCHAR},
      keeper = #{record.keeper,jdbcType=VARCHAR},
      last_test_status = #{record.lastTestStatus,jdbcType=VARCHAR},
      last_test_date = #{record.lastTestDate,jdbcType=TIMESTAMP},
      last_test_result = #{record.lastTestResult,jdbcType=VARCHAR},
      last_entrust_id = #{record.lastEntrustId,jdbcType=VARCHAR},
      last_task_id = #{record.lastTaskId,jdbcType=VARCHAR},
      last_expect_price = #{record.lastExpectPrice,jdbcType=DECIMAL},
      last_real_price = #{record.lastRealPrice,jdbcType=DECIMAL},
      note = #{record.note,jdbcType=VARCHAR},
      operater = #{record.operater,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.webside.business.model.FacilityEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Feb 22 19:44:41 CST 2018.
    -->
    update tb_facility
    <set>
      <if test="cid != null">
        cid = #{cid,jdbcType=INTEGER},
      </if>
      <if test="factoryNo != null">
        factory_no = #{factoryNo,jdbcType=VARCHAR},
      </if>
      <if test="facilityName != null">
        facility_name = #{facilityName,jdbcType=VARCHAR},
      </if>
      <if test="facilityType != null">
        facility_type = #{facilityType,jdbcType=VARCHAR},
      </if>
      <if test="model != null">
        model = #{model,jdbcType=VARCHAR},
      </if>
      <if test="accuracy != null">
        accuracy = #{accuracy,jdbcType=VARCHAR},
      </if>
      <if test="testRange != null">
        test_range = #{testRange,jdbcType=VARCHAR},
      </if>
      <if test="belongOrgan != null">
        belong_organ = #{belongOrgan,jdbcType=VARCHAR},
      </if>
      <if test="manageNo != null">
        manage_no = #{manageNo,jdbcType=VARCHAR},
      </if>
      <if test="manufacturer != null">
        manufacturer = #{manufacturer,jdbcType=VARCHAR},
      </if>
      <if test="usePlace != null">
        use_place = #{usePlace,jdbcType=VARCHAR},
      </if>
      <if test="function != null">
        function = #{function,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="priceUnit != null">
        price_unit = #{priceUnit,jdbcType=VARCHAR},
      </if>
      <if test="localSource != null">
        local_source = #{localSource,jdbcType=VARCHAR},
      </if>
      <if test="facilityState != null">
        facility_state = #{facilityState,jdbcType=VARCHAR},
      </if>
      <if test="ifTest != null">
        if_test = #{ifTest,jdbcType=VARCHAR},
      </if>
      <if test="purchaseDate != null">
        purchase_date = #{purchaseDate,jdbcType=TIMESTAMP},
      </if>
      <if test="expirationDate != null">
        expiration_date = #{expirationDate,jdbcType=TIMESTAMP},
      </if>
      <if test="facilityAttach != null">
        facility_attach = #{facilityAttach,jdbcType=VARCHAR},
      </if>
      <if test="keeper != null">
        keeper = #{keeper,jdbcType=VARCHAR},
      </if>
      <if test="lastTestStatus != null">
        last_test_status = #{lastTestStatus,jdbcType=VARCHAR},
      </if>
      <if test="lastTestDate != null">
        last_test_date = #{lastTestDate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastTestResult != null">
        last_test_result = #{lastTestResult,jdbcType=VARCHAR},
      </if>
      <if test="lastEntrustId != null">
        last_entrust_id = #{lastEntrustId,jdbcType=VARCHAR},
      </if>
      <if test="lastTaskId != null">
        last_task_id = #{lastTaskId,jdbcType=VARCHAR},
      </if>
      <if test="lastExpectPrice != null">
        last_expect_price = #{lastExpectPrice,jdbcType=DECIMAL},
      </if>
      <if test="lastRealPrice != null">
        last_real_price = #{lastRealPrice,jdbcType=DECIMAL},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="operater != null">
        operater = #{operater,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.webside.business.model.FacilityEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Feb 22 19:44:41 CST 2018.
    -->
    update tb_facility
    set cid = #{cid,jdbcType=INTEGER},
      factory_no = #{factoryNo,jdbcType=VARCHAR},
      facility_name = #{facilityName,jdbcType=VARCHAR},
      facility_type = #{facilityType,jdbcType=VARCHAR},
      model = #{model,jdbcType=VARCHAR},
      accuracy = #{accuracy,jdbcType=VARCHAR},
      test_range = #{testRange,jdbcType=VARCHAR},
      belong_organ = #{belongOrgan,jdbcType=VARCHAR},
      manage_no = #{manageNo,jdbcType=VARCHAR},
      manufacturer = #{manufacturer,jdbcType=VARCHAR},
      use_place = #{usePlace,jdbcType=VARCHAR},
      function = #{function,jdbcType=VARCHAR},
      price = #{price,jdbcType=DECIMAL},
      price_unit = #{priceUnit,jdbcType=VARCHAR},
      local_source = #{localSource,jdbcType=VARCHAR},
      facility_state = #{facilityState,jdbcType=VARCHAR},
      if_test = #{ifTest,jdbcType=VARCHAR},
      purchase_date = #{purchaseDate,jdbcType=TIMESTAMP},
      expiration_date = #{expirationDate,jdbcType=TIMESTAMP},
      facility_attach = #{facilityAttach,jdbcType=VARCHAR},
      keeper = #{keeper,jdbcType=VARCHAR},
      last_test_status = #{lastTestStatus,jdbcType=VARCHAR},
      last_test_date = #{lastTestDate,jdbcType=TIMESTAMP},
      last_test_result = #{lastTestResult,jdbcType=VARCHAR},
      last_entrust_id = #{lastEntrustId,jdbcType=VARCHAR},
      last_task_id = #{lastTaskId,jdbcType=VARCHAR},
      last_expect_price = #{lastExpectPrice,jdbcType=DECIMAL},
      last_real_price = #{lastRealPrice,jdbcType=DECIMAL},
      note = #{note,jdbcType=VARCHAR},
      operater = #{operater,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="queryListByPage" parameterType="map" resultMap="BaseResultMap"
		flushCache="true" useCache="true">
		SELECT id, cid,
			(select b.c_name from tb_company b where a.cid = b.c_id) c_name, 
			factory_no,	facility_name, facility_type, model,
			accuracy, test_range, belong_organ,
			manage_no, manufacturer, price,
			price_unit, local_source,
			(select name from tb_code where value = facility_state and type='facilityState') facility_state,
			(select name from tb_code where value = if_test and type='ifTest') if_test,
			purchase_date, expiration_date,
			facility_attach, keeper, last_test_status, last_test_date,
			last_entrust_id, last_task_id, last_expect_price,
			last_real_price, note, operater, update_time
		FROM tb_facility a
		<where>
			<choose>
				<when test="companyIds !=null">
					<foreach collection="companyIds" item="companyId" open="and cid IN("
						close=")" separator=",">
						#{companyId}
					</foreach>
				</when>
				<otherwise>
					and cid = #{cid}
				</otherwise>
			</choose>
			<choose>
				<when
					test="query_expr != null and (query_expr == 'like' or query_expr == 'not like')">
					<if test="note != null and note != ''">
						and note ${query_expr} '%${note}%'
					</if>
					<if test="factoryNo != null and factoryNo != ''">
						and factory_no ${query_expr} '%${factoryNo}%'
					</if>
					<if test="facilityType != null and facilityType != ''">
						and facility_type ${query_expr} '%${facilityType}%'
					</if>
					<if test="facilityName != null and facilityName != ''">
						and facility_name ${query_expr} '%${facilityName}%'
					</if>
					<if test="model != null and model != ''">
						and model ${query_expr} '%${model}%'
					</if>
				</when>
				<when
					test="query_expr != null and query_expr != 'like' and query_expr != 'not like'">
					<if test="note != null and note != ''">
						and note ${query_expr} #{note}
					</if>
					<if test="factoryNo != null and factoryNo != ''">
						and factory_no ${query_expr} #{factoryNo}
					</if>
					<if test="facilityType != null and facilityType != ''">
						and facility_type ${query_expr} #{facilityType}
					</if>
					<if test="facilityName != null and facilityName != ''">
						and facility_name ${query_expr} #{facilityName}
					</if>
					<if test="model != null and model != ''">
						and model ${query_expr} #{model}
					</if>
					<if test="price != null and price != ''">
						and price ${query_expr} #{price}
					</if>
				</when>
				<otherwise>
					<if test="purchaseDate != null and startDate != null">
						and purchase_date &gt;= #{startDate}
					</if>
					<if test="purchaseDate != null and endDate != null">
						and purchase_date &lt;= #{endDate}
					</if>
					<if test="expirationDate != null and startDate != null">
						and expiration_date &gt;= #{startDate}
					</if>
					<if test="expirationDate != null and endDate != null">
						and expiration_date &lt;= #{endDate}
					</if>
					<if test="updateTime != null and startDate != null">
						and update_time &gt;= #{startDate}
					</if>
					<if test="updateTime != null and endDate != null">
						and update_time &lt;= #{endDate}
					</if>
				</otherwise>
			</choose>
			<if test="taskId != null">
				and not exists (select 1 from tb_task_facility b where b.task_id = #{taskId} and b.facility_id = a.id )
		    </if>
		</where>
		order by cid,facility_type,facility_name DESC
	</select>
	<select id="queryInquriyListByPage" parameterType="map" resultMap="BaseResultMap"
		flushCache="true" useCache="true">
		SELECT b.id, b.cid,
			(select c.c_name from tb_company c where b.cid = c.c_id) c_name, 
			b.factory_no, b.facility_name, b.facility_type, b.model,
			b.accuracy, b.test_range, b.belong_organ,
			b.manage_no, b.manufacturer, b.price,
			b.price_unit, b.local_source,
			(select d.name from tb_code d where d.value = b.facility_state and d.type='facilityState') facility_state,
			(select e.name from tb_code e where e.value = b.if_test and e.type='ifTest') if_test,
			b.purchase_date, b.expiration_date,
			b.facility_attach, b.keeper, b.last_test_status, b.last_test_date,
			b.last_entrust_id, b.last_task_id, b.last_expect_price,
			b.last_real_price, b.note, b.operater, b.update_time
		FROM tb_inquiry_details a, tb_facility b
		<where>
			b.id = a.id
		    AND a.inquiry_id = #{inquiryId}
			<choose>
				<when test="companyIds !=null">
					<foreach collection="companyIds" item="companyId" open="and b.cid IN("
						close=")" separator=",">
						#{companyId}
					</foreach>
				</when>
				<otherwise>
					and b.cid = #{cid}
				</otherwise>
			</choose>
			<choose>
				<when
					test="query_expr != null and (query_expr == 'like' or query_expr == 'not like')">
					<if test="companyName != null and companyName != ''">
						and b.c_name ${query_expr} '%${companyName}%'
					</if>
					<if test="note != null and note != ''">
						and b.note ${query_expr} '%${note}%'
					</if>
					<if test="factoryNo != null and factoryNo != ''">
						and b.factory_no ${query_expr} '%${factoryNo}%'
					</if>
					<if test="factoryType != null and factoryType != ''">
						and b.factory_type ${query_expr} '%${factoryType}%'
					</if>
					<if test="facilityName != null and facilityName != ''">
						and b.facility_name ${query_expr} '%${facilityName}%'
					</if>
					<if test="model != null and model != ''">
						and b.model ${query_expr} '%${model}%'
					</if>
				</when>
				<when
					test="query_expr != null and query_expr != 'like' and query_expr != 'not like'">
					<if test="companyName != null and companyName != ''">
						and b.c_name ${query_expr} #{companyName}
					</if>
					<if test="note != null and note != ''">
						and b.note ${query_expr} #{note}
					</if>
					<if test="factoryNo != null and factoryNo != ''">
						and b.factory_no ${query_expr} #{factoryNo}
					</if>
					<if test="factoryType != null and factoryType != ''">
						and b.factory_type ${query_expr} #{factoryType}
					</if>
					<if test="facilityName != null and facilityName != ''">
						and b.facility_name ${query_expr} #{facilityName}
					</if>
					<if test="model != null and model != ''">
						and b.model ${query_expr} #{model}
					</if>
					<if test="price != null and price != ''">
						and b.price ${query_expr} #{price}
					</if>
				</when>
				<otherwise>
					<if test="purchaseDate != null and startDate != null">
						and b.purchase_date &gt;= #{startDate}
					</if>
					<if test="purchaseDate != null and endDate != null">
						and b.purchase_date &lt;= #{endDate}
					</if>
					<if test="expirationDate != null and startDate != null">
						and b.expiration_date &gt;= #{startDate}
					</if>
					<if test="expirationDate != null and endDate != null">
						and b.expiration_date &lt;= #{endDate}
					</if>
					<if test="updateTime != null and startDate != null">
						and b.update_time &gt;= #{startDate}
					</if>
					<if test="updateTime != null and endDate != null">
						and b.update_time &lt;= #{endDate}
					</if>
				</otherwise>
			</choose>
			<if test="taskId != null">
				and not exists (select 1 from tb_task_facility f where f.task_id = #{taskId} and f.facility_id = b.id )
		    </if>
		</where>
		order by b.cid,b.facility_type,b.facility_name DESC
	</select>
	<select id="findById" parameterType="String" resultMap="BaseResultMap" useCache="false">
		SELECT id, cid, 
		(select b.c_name from tb_company b where a.cid = b.c_id) c_name,
		factory_no,
		facility_name, facility_type, model,
		accuracy, test_range, belong_organ,
		manage_no, manufacturer, price,
		price_unit, local_source, facility_state,
		if_test, purchase_date, expiration_date,
		facility_attach, keeper, last_test_status,
		last_entrust_id, last_task_id, last_expect_price,
		last_real_price, note, operater,
		update_time
		FROM tb_facility a
		where id = ${id}
	</select>
	<delete id="deleteBatchByIds" parameterType="list">
		<![CDATA[  
       delete from tb_facility where id in  
    	]]>  
	    <foreach collection="list" item = "id" open="(" separator="," close=")">
	    #{id}  
	    </foreach>  
	</delete>
	<delete id="updateFacilityStateById" parameterType="com.webside.business.model.FacilityEntity">
		<![CDATA[  
       update tb_facility set facility_state = #{facilityState,jdbcType=VARCHAR} where id = #{id,jdbcType=VARCHAR} 
    	]]>  
	</delete>	
</mapper>