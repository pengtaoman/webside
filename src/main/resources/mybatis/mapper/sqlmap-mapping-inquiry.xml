<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.webside.business.mapper.InquiryMapper">
  <resultMap id="BaseResultMap" type="com.webside.business.model.InquiryEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Jan 06 21:07:14 CST 2018.
    -->
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="reply_user_id" jdbcType="INTEGER" property="replyUserId" />
    <result column="company_id" jdbcType="INTEGER" property="companyId" />
    <result column="u_name" jdbcType="VARCHAR" property="userName" />
    <result column="c_company_name" jdbcType="VARCHAR" property="companyName" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="note" jdbcType="VARCHAR" property="note" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
 
   <resultMap id="DetailsResultMap" type="com.webside.business.model.InquiryDetailsEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jan 19 20:33:23 CST 2018.
    -->
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="inquiry_id" jdbcType="VARCHAR" property="inquiryId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="field" jdbcType="VARCHAR" property="field" />
    <result column="model" jdbcType="VARCHAR" property="model" />
    <result column="accuracy" jdbcType="VARCHAR" property="accuracy" />
    <result column="unit" jdbcType="VARCHAR" property="unit" />
    <result column="stand_price" jdbcType="DECIMAL" property="standPrice" />
    <result column="expect_price" jdbcType="DECIMAL" property="expectPrice" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="amount" jdbcType="INTEGER" property="amount" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="note" jdbcType="VARCHAR" property="note" />
    <result column="test_range" jdbcType="VARCHAR" property="testRange" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
 
  <sql id="Base_Column_List">
    id, user_id, reply_user_id,company_id, status, note, create_time, update_time, u_name, c_company_name
  </sql>
  
  <sql id="DetailsBase_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jan 19 20:33:23 CST 2018.
    -->
    id, inquiry_id, name, field, model, accuracy, unit, stand_price, expect_price, price, 
    amount, type, note, test_range, create_time
  </sql>
  <select id="queryListAll" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Jan 06 21:07:14 CST 2018.
    -->
    select
    <include refid="Base_Column_List" />
   from tb_inquiry t left join tb_user u on t.user_id = u.u_id
    	<where>
    		<if test="companyIds !=null">
				 <foreach collection="companyIds" item="companyId" open="and company_id IN(" close=")" separator=",">
	                #{companyId}
	    		</foreach>		
			</if>
			<choose>
		 		<when test="query_expr != null and (query_expr == 'like' or query_expr == 'not like')">
					<if test="note != null and note != ''">
						and note ${query_expr} '%${note}%'
					</if>
					<if test="companyName != null and companyName != ''">
						and c_company_name ${query_expr} '%${companyName}%'
					</if>
				</when>
				<when test="query_expr != null and query_expr != 'like' and query_expr != 'not like'">
		 			<if test="note != null and note != ''">
						and note ${query_expr} #{note}
					</if>
					<if test="companyName != null and companyName != ''">
						and c_company_name ${query_expr} #{companyName}
					</if>
				</when>
				<otherwise>
					<if test="createTime != null and startDate != null">
						and create_time &gt;= #{startDate}
					</if>
					<if test="createTime != null and endDate != null">
						and create_time &lt;= #{endDate}
					</if>
					<if test="updateTime != null and startDate != null">
						and update_time &gt;= #{startDate}
					</if>
					<if test="updateTime != null and endDate != null">
						and update_time &lt;= #{endDate}
					</if>
       		 	</otherwise>
			</choose>
		</where>
		order by create_time DESC
  </select>
  <select id="queryListByPage" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from tb_inquiry t left join tb_user u on t.user_id = u.u_id
    	<where>
    		<choose>
	    		<when test="companyIds !=null">
					 <foreach collection="companyIds" item="companyId" open="and company_id IN(" close=")" separator=",">
		                #{companyId}
		    		</foreach>		
				</when>
				<otherwise>
					and company_id = #{companyId}
       		 	</otherwise>
			</choose>
    		
			<choose>
		 		<when test="query_expr != null and (query_expr == 'like' or query_expr == 'not like')">
					<if test="note != null and note != ''">
						and note ${query_expr} '%${note}%'
					</if>
					<if test="companyName != null and companyName != ''">
						and c_company_name ${query_expr} '%${companyName}%'
					</if>
				</when>
				<when test="query_expr != null and query_expr != 'like' and query_expr != 'not like'">
		 			<if test="note != null and note != ''">
						and note ${query_expr} #{note}
					</if>
					<if test="status != null">
						and status ${query_expr} #{status}
					</if>
					
					<if test="companyName != null and companyName != ''">
						and c_company_name ${query_expr} #{companyName}
					</if>
				</when>
				<otherwise>
					<if test="createTime != null and startDate != null">
						and create_time &gt;= #{startDate}
					</if>
					<if test="createTime != null and endDate != null">
						and create_time &lt;= #{endDate}
					</if>
					<if test="updateTime != null and startDate != null">
						and update_time &gt;= #{startDate}
					</if>
					<if test="updateTime != null and endDate != null">
						and update_time &lt;= #{endDate}
					</if>
       		 	</otherwise>
			</choose>
		</where>
		order by create_time DESC
  </select>
  <select id="findById" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Jan 06 21:07:14 CST 2018.
    -->
    select 
    <include refid="Base_Column_List" />
    from tb_inquiry t left join tb_user u on t.user_id = u.u_id
    where id = #{id,jdbcType=VARCHAR}
  </select>
  
  <select id="findByName" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Jan 06 21:07:14 CST 2018.
    -->
    select 
    <include refid="Base_Column_List" />
    from tb_inquiry t left join tb_user u on t.user_id = u.u_id
    where note like '%${note}%'
  </select>
  
  <delete id="deleteById" parameterType="java.lang.String">
    delete from tb_inquiry
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  
  	<delete id="deleteBatchById" parameterType="list">
       delete from tb_inquiry where id in  
	    <foreach collection="list" item = "id" open="(" separator="," close=")">
	    #{id}  
	    </foreach>;
	    delete from tb_inquiry_details where inquiry_id in  
	    <foreach collection="list" item = "id" open="(" separator="," close=")">
	    #{id}  
	    </foreach>   
	</delete>
	
  <insert id="insert" parameterType="com.webside.business.model.InquiryEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Jan 06 21:07:14 CST 2018.
    -->
    insert into tb_inquiry
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="replyUserId != null">
        reply_user_id,
      </if>
      <if test="companyId != null">
        company_id,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="note != null">
        note,
      </if>
        create_time,
        update_time
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="replyUserId != null">
        #{replyUserId,jdbcType=INTEGER},
      </if>
      <if test="companyId != null">
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
      now(),
      now()
    </trim>
  </insert>
  
  <insert id="insertDetailsBatch" parameterType="map">  
    insert into tb_inquiry_details (
      id, inquiry_id, name, 
      field, model, accuracy,  
      stand_price, expect_price, price, 
      amount, type, unit, 
      note, test_range, create_time
      )  
      values 
    <foreach collection="list" item="item" index="index" separator="," >  
        ( #{item.id},#{item.inquiryId},#{item.name},
          #{item.field},#{item.model},#{item.accuracy},
          #{item.standPrice},#{item.expectPrice}, #{item.price},
          #{item.amount},#{item.type},#{item.unit},
          #{item.note},#{item.testRange},now())  
    </foreach>  
  </insert>

	<select id="queryDetailsList" parameterType="map" resultMap="DetailsResultMap">
		select
	    <include refid="DetailsBase_Column_List" />
	    from tb_inquiry_details
	    where inquiry_id = #{id} 
	    order by #{id}
	</select>
  <select id="count" parameterType="map" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Jan 06 21:07:14 CST 2018.
    -->
    select count(*) from tb_inquiry
    <where>
    		<if test="companyIds !=null">
				 <foreach collection="companyIds" item="companyId" open="and company_id IN(" close=")" separator=",">
	                #{companyId}
	    		</foreach>		
			</if>
			<choose>
				<when test="query_like_flag != null">
					<if test="userName != null and userName != ''">
						and note like '%${note}%'
					</if>					
				</when>
				<otherwise>
					<if test="userName != null and userName != ''">
						and note = #{note}
					</if>
				</otherwise>
			</choose>
		</where>
  </select>
 
  <update id="update" parameterType="com.webside.business.model.InquiryEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Jan 06 21:07:14 CST 2018.
    -->
    update tb_inquiry
    <set>
    <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
    <if test="replyUserId != null">
        reply_user_id = #{replyUserId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
      update_time = now()
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  
  <update id="updateBatch" parameterType="java.util.List">
    update tb_inquiry 
	set  status=
	    <foreach collection="list" item="item" index="index" 
	        separator=" " open="case ID" close="end">
	        when #{item.id} then #{item.status}
	    </foreach>
    where id in
    <foreach collection="list" index="index" item="item" 
        separator="," open="(" close=")">
        #{item.id}
    </foreach>
 </update>
   <delete id="deleteDetailsByInquiryId" parameterType="java.lang.String">
    delete from tb_inquiry_details
	    where inquiry_id = #{inquiryId} 
  </delete>
 
</mapper>